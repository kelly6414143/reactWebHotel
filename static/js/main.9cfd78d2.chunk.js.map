{"version":3,"sources":["apis/https.js","apis/api.js","components/homepage/Homepage.js","containers/homepage/Homepage.js","containers/roompage/Roompage.js","common/components/Dialog.js","components/roompage/Roompage.js","App.js","serviceWorker.js","index.js"],"names":["req","api","method","params","config","apiToken","data","headers","Promise","resolve","reject","axios","url","then","catch","error","console","dir","room","getRooms","getSingleRoom","param","id","addGuest","HomepageConainer","WrappedComponent","props","state","rooms","res","success","items","allRooms","map","el","name","split","join","sessionStorage","setItem","JSON","stringify","length","setState","this","React","Component","className","trimRoomName","to","pathname","query","key","style","backgroundImage","imageUrl","normalDayPrice","holidayPrice","RoompageConainer","onChangeRoomType","onFetchRoomInfo","roomId","booking","imageArr","onChangeArrangement","newImageArr","i","onShowReserveDialog","isShowReserveDialog","onCloseReserveDialog","location","history","roomType","push","parseAllRooms","parse","filter","Dialog","isShow","onClose","onClick","children","RoomListComponent","RoomPriceContentComponent","ImageCarouselComponent","RoomDescriComponent","description","descriptionShort","GuestMin","GuestMax","Bed","Footage","checkInAndOut","checkInEarly","checkInLate","checkOut","RoomReservationComponent","type","placeholder","log","Object","keys","amenities","App","exact","path","component","Homepage","Roompage","from","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9cfd78d2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n/**\r\n * 模組說明:有api_token的請求\r\n */\r\nexport const req = (api, method = 'get', params = {}, config = {}) => {\r\n  const apiToken = 'i2A9LrARnW0vSgOGpO9E3X7kDM1tZDQwRLDK1qOlXxXtzVKG6ByZN2JXLxqC';\r\n  const data = (method === 'get') ? 'params' : 'data';\r\n  let headers = {\r\n    'X-Requested-With': 'XMLHttpRequest',\r\n    'Content-Type': 'application/json',\r\n    'Authorization': `Bearer ${apiToken}`,\r\n  };\r\n  if (config.headers) {\r\n    headers = {\r\n      ...headers,\r\n      ...config.headers\r\n    }\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    axios({\r\n      url: `https://challenge.thef2e.com/api/thef2e2019/stage6/${api}`,\r\n      method,\r\n      [data]: params,\r\n      headers,\r\n    }).then(resolve)\r\n      .catch(error => {\r\n        console.dir(error);\r\n        // Message.error(typeof error.response.data === 'string' ? error.response.data : JSON.stringify(error.response.data));\r\n        reject(error);\r\n      });\r\n  });\r\n};","//api.js\r\nimport {req} from './https';\r\n\r\nconst api={\r\n    room:{\r\n        getRooms(){\r\n            return req('rooms','get')\r\n        },\r\n        getSingleRoom(param){\r\n            return req(`room/${param.id}`,'get')\r\n        },\r\n        addGuest(params){\r\n            return req('post','/guest',params)\r\n        }\r\n    }\r\n}\r\n\r\nexport default api\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport HomepageConainer from '../../containers/homepage/Homepage'\r\n// import '../../style/homepage.scss'\r\n\r\nconst Homepage = (props) => {\r\n    const { rooms } = props\r\n    return (\r\n        <div className=\"homepage\">\r\n            <div className=\"homepage_wrapper\">\r\n                <h1>WHITE INN</h1>\r\n                <div className=\"homepage_footer\">\r\n                    <div className=\"homepage_roomcarousel\">\r\n                        {\r\n                            rooms.map((el) => {\r\n                                    const trimRoomName = el.name.split(' ').join('_')\r\n                                    return (\r\n                                        <Link to={{ pathname:`/roomInfo/${ trimRoomName }`, query:{id: el.id} }} key={ el.id } className=\"homepage_roomcarousel_roomcard\">\r\n                                            <div className=\"homepage_roomcarousel_imgwrapper\" style={ { backgroundImage: `url(${ el.imageUrl })` } }></div>\r\n                                            <div className=\"homepage_roomcarousel_roominfo\">\r\n                                                <h3>{ el.name }</h3>\r\n                                                <p>$ { el.normalDayPrice }</p>\r\n                                                <p>$ { el.holidayPrice }</p>\r\n                                            </div>\r\n                                        </Link>\r\n                                    )\r\n                                }\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className=\"homepage_webinfo\">\r\n                        <div className=\"homepage_webinfo_wrapper\">\r\n                            <p>台北市ＯＯ區ＯＯ街123號</p>\r\n                            <p>12345-6789</p>\r\n                            <p>abcd@efghijk.com</p>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default HomepageConainer(Homepage)\r\n","import React from 'react';\r\nimport api from '../../apis/api'\r\n\r\nconst HomepageConainer = (WrappedComponent) => class extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            rooms: []\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        api.room.getRooms().then((res) => {\r\n            const { success,items } = res.data\r\n            const allRooms = items.map(el=>{\r\n                return {name:el.name.split(' ').join('_'), id:el.id}\r\n            })\r\n            sessionStorage.setItem('allRooms', JSON.stringify(allRooms))\r\n            if (success) {\r\n                if (items && items.length > 0) {\r\n                    this.setState({\r\n                        rooms:items\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <WrappedComponent {...this.state} {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomepageConainer;","import React from 'react'\r\nimport api from '../../apis/api'\r\n\r\nconst RoompageConainer = (WrappedComponent) => class extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            room: [],\r\n            booking: [],\r\n            imageArr: [],\r\n            isShowReserveDialog: false\r\n        }\r\n    }\r\n\r\n    onChangeRoomType = (el) => {\r\n        sessionStorage.setItem('roomId', el.id)\r\n        this.onFetchRoomInfo()\r\n    }\r\n\r\n    onFetchRoomInfo = () => {\r\n        api.room.getSingleRoom(\r\n            { id: sessionStorage.roomId })\r\n            .then((res) => {\r\n                const { success, room, booking } = res.data\r\n                if (success) {\r\n                    this.setState({\r\n                        room: room,\r\n                        booking: booking,\r\n                        imageArr: room[0].imageUrl\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    onChangeArrangement = () => {\r\n        const { imageArr } = this.state\r\n        const newImageArr = []\r\n        for (let i = 0; i < imageArr.length; i++) {\r\n            if (i < imageArr.length - 1) {\r\n                newImageArr[i] = imageArr[i + 1]\r\n            } else {\r\n                newImageArr[i] = imageArr[0]\r\n            }\r\n        }\r\n        this.setState({\r\n            imageArr: newImageArr\r\n        })\r\n    }\r\n\r\n    onShowReserveDialog = () => {\r\n        this.setState({\r\n            isShowReserveDialog: true\r\n        })\r\n    }\r\n\r\n    onCloseReserveDialog = ()=>{\r\n        this.setState({\r\n            isShowReserveDialog: false\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { location, history } = this.props\r\n        const roomType = location.pathname.split('/roomInfo/').join(\"\")\r\n        if(!sessionStorage.allRooms) return history.push('/')\r\n        const parseAllRooms = JSON.parse(sessionStorage.allRooms)\r\n\r\n        const realUrl = parseAllRooms.filter(el => {\r\n            if (el.name === roomType) {\r\n                sessionStorage.setItem('roomId', el.id)\r\n                return true\r\n            }\r\n            return false\r\n        })\r\n\r\n        if (realUrl.length < 1) {\r\n            history.push('/')\r\n        }\r\n\r\n        this.setState({\r\n            allRooms: parseAllRooms\r\n        })\r\n\r\n        this.onFetchRoomInfo()\r\n\r\n        // api.room.getSingleRoom(\r\n        //     { id: sessionStorage.roomId })\r\n        //     .then((res) => {\r\n        //         const { success, room, booking } = res.data\r\n        //         if (success) {\r\n        //             this.setState({\r\n        //                 room: room,\r\n        //                 booking: booking,\r\n        //                 allRooms:parseAllRooms\r\n        //\r\n        //             })\r\n        //         }\r\n        //     })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <WrappedComponent\r\n                onChangeRoomType={this.onChangeRoomType}\r\n                onChangeArrangement={this.onChangeArrangement}\r\n                onShowReserveDialog={this.onShowReserveDialog}\r\n                onCloseReserveDialog = {this.onCloseReserveDialog}\r\n                {...this.state}\r\n                {...this.props}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoompageConainer\r\n","import React, { useState, useEffect } from 'react';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\n\r\nconst Dialog = (props) => {\r\n    const { isShow, onClose } = props\r\n\r\n    // const onCloseDialog = () => {\r\n    //     setIsShow(false)\r\n    // }\r\n\r\n    return (\r\n        <div className={isShow ? \"dialog\" : \"dialog_none\"} onClick={onClose}>\r\n            <div className=\"dialog_boxwrapper\">\r\n                {props.children}\r\n                <span className=\"dialog_boxwrapper_closebtn\" onClick={onClose}><ClearIcon/></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport RoompageConainer from '../../containers/roompage/Roompage'\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport Dialog from '../../common/components/Dialog'\r\n\r\nconst roomType = {\r\n    'Single': '單人床',\r\n    'Double': '雙人床',\r\n    'Small Double': '豪華單人床',\r\n    'Queen': '豪華雙人床'\r\n}\r\n\r\nconst Roompage = (props) => {\r\n    const {\r\n        allRooms,\r\n        room,\r\n        imageArr,\r\n        isShowReserveDialog,\r\n        onChangeRoomType,\r\n        onChangeArrangement,\r\n        onShowReserveDialog,\r\n        onCloseReserveDialog\r\n    } = props\r\n\r\n    const RoomListComponent = () => {\r\n        return (\r\n            <div className=\"roompage_info_right_top\">\r\n                {\r\n                    allRooms && allRooms.length > 0 ?\r\n                        allRooms.map(el => {\r\n                            if (room.length > 0) {\r\n                                if (el.id !== room[0].id) {\r\n                                    return (\r\n                                        <Link\r\n                                            to={`/roomInfo/${el.name}`}\r\n                                            key={el.id}\r\n                                            onClick={() => onChangeRoomType(\r\n                                                el)}>\r\n                                            <h4>{el.name.split(\r\n                                                '_').join(' ')}</h4>\r\n                                        </Link>\r\n                                    )\r\n                                }\r\n                            }\r\n\r\n                            return false\r\n                        }) :\r\n                        false\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const RoomPriceContentComponent = () =>\r\n        <div className=\"roompage_info_right_middle_top\">\r\n            <h3>{room.length > 0 && room[0].name}</h3>\r\n            <div className=\"roompage_info_right_middle_price\">\r\n                <div>平日(一~四)價格：<span>{room.length > 0 &&\r\n                    room[0].normalDayPrice}</span></div>\r\n                <div>假日(五~日)價格：<span>{room.length > 0 &&\r\n                    room[0].holidayPrice}</span></div>\r\n            </div>\r\n        </div>\r\n\r\n    const ImageCarouselComponent = () =>\r\n        imageArr && imageArr.length > 0 ? <>\r\n            <div className=\"roompage_info_left_largeimage\" style={{ backgroundImage: `url(${imageArr[0]})` }}>\r\n                <span className=\"roompage_info_left_caroucelBtn\" onClick={onChangeArrangement}><ArrowForwardIosIcon /></span>\r\n            </div>\r\n            <div className=\"roompage_info_left_smallimages\">\r\n                <div className=\"roompage_info_left_smallimages_image\" style={{ backgroundImage: `url(${imageArr[1]})` }}></div>\r\n                <div className=\"roompage_info_left_smallimages_image\" style={{ backgroundImage: `url(${imageArr[2]})` }}></div>\r\n            </div>\r\n        </> : null\r\n\r\n\r\n    const RoomDescriComponent = () =>\r\n        <div className=\"roompage_info_right_middle_down_half\">\r\n            <div className=\"roompage_info_right_middle_descri\">{room.length >\r\n                0 && room[0].description}</div>\r\n            <div className=\"roompage_info_right_middle_detail\">\r\n                <p>房客人數限制：{room.length >\r\n                    0 && room[0].descriptionShort.GuestMin} - {room.length >\r\n                        0 && room[0].descriptionShort.GuestMax} 人</p>\r\n                <p>床型：{roomType[room.length >\r\n                    0 && room[0].descriptionShort.Bed[0]]}</p>\r\n                <p>衛浴數量：{room.length >\r\n                    0 && room[0].descriptionShort['Private-Bath']} 間</p>\r\n                <p>房間大小：{room.length >\r\n                    0 && room[0].descriptionShort.Footage} 平方公尺</p>\r\n                <p>checkIn 時間：{room.length >\r\n                    0 && room[0].checkInAndOut.checkInEarly} ~ {room.length >\r\n                        0 && room[0].checkInAndOut.checkInLate}</p>\r\n                <p>checkOut 時間：{room.length >\r\n                    0 && room[0].checkInAndOut.checkOut}</p>\r\n            </div>\r\n        </div>\r\n\r\n    const RoomReservationComponent = () =>\r\n        <div className=\"roompage_info_right_middle_down_half\">\r\n            <input type=\"text\" placeholder=\"Name\" />\r\n            <input type=\"text\" placeholder=\"Phone\" />\r\n            <div className=\"roompage_info_right_middle_formDate\">\r\n                <input type=\"text\" placeholder=\"Check in\" />\r\n                <input type=\"text\" placeholder=\"Check out\" />\r\n            </div>\r\n            <div className=\"roompage_info_right_middle_formButton\">\r\n                <div></div>\r\n                <div>\r\n                    <button onClick={onShowReserveDialog}>預約</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    console.log(room)\r\n    return (\r\n        <>\r\n            <div className=\"roompage\">\r\n                <div className=\"roompage_wrapper\">\r\n                    <div className=\"roompage_info\">\r\n                        <div className=\"roompage_info_left\">\r\n                            <Link to={'/'}><h2>WHITE INN</h2></Link>\r\n                            <ImageCarouselComponent />\r\n                        </div>\r\n                        <div className=\"roompage_info_right\">\r\n                            <RoomListComponent />\r\n                            <div className=\"roompage_info_right_middle\">\r\n                                <RoomPriceContentComponent />\r\n                                <div className=\"roompage_info_right_middle_down\">\r\n                                    <RoomDescriComponent />\r\n                                    <RoomReservationComponent />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"roompage_info_right_down\">\r\n                                {\r\n                                    Object.keys(room.length > 0 && room[0].amenities).map((el) => {\r\n                                        return (\r\n                                            <div key={el} className=\"roompage_info_right_down_item\">\r\n                                                {room[0].amenities[el] ? <CheckBoxIcon /> : <CheckBoxOutlineBlankIcon />}<span>{el}</span>\r\n                                            </div>\r\n\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Dialog isShow={isShowReserveDialog} onClose={onCloseReserveDialog} >\r\n                    <div className=\"roompagedialog\">\r\n                        <div className=\"roompagedialog_wrapper\">\r\n                            <h3>{room.length > 0 && room[0].name}</h3>\r\n                            <div className=\"roompagedialog_content\">\r\n                                <div className=\"roompagedialog_content_descri\">\r\n                                    <span>入住</span>\r\n                                    <span>2019/09/10 星期三（15:00 起）</span>\r\n                                </div>\r\n                                <div className=\"roompagedialog_content_descri\">\r\n                                    <span>退房</span>\r\n                                    <span>2019/09/12 星期五（10:00 前）</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"roompagedialog_total\">3 晚 /  4260 元</div>\r\n                        </div>\r\n                        <button>確定</button>\r\n                    </div>\r\n                </Dialog>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default RoompageConainer(Roompage)\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\r\n// import routeConfig from './routeConfig'\r\nimport './style/app.scss';\r\nimport Homepage from './components/homepage/Homepage';\r\nimport Roompage from './components/roompage/Roompage';\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <Router >\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Homepage} />\r\n        <Route path=\"/roomInfo/:type\" component={Roompage} />\r\n        <Redirect from=\"/roomInfo/\" to=\"/roomInfo/Single_Room\" />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}